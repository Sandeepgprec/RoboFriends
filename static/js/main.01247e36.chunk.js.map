{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/Cardlist.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","Cardlist","robots","cardArray","map","user","i","username","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCMCQ,EAXJ,SAACC,GACR,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,cACpB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCWXC,EAhBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACPC,EAAUD,EAAOE,KAAI,SAACC,EAAKC,GAC7B,OAAO,cAAC,EAAD,CAEPR,GAAII,EAAOI,GAAGR,GACdC,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,MACjBO,SAAUL,EAAOI,GAAGC,UAJfL,EAAOI,GAAGR,OAOnB,OACI,8BACEK,KCNKK,EAPC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACI,8BACA,uBAAOd,UAAU,mCAAmCe,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCGjGI,G,MAPF,SAACnB,GACV,OACI,qBAAKoB,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACKvB,EAAMwB,aC0CJC,E,kDAvCX,aAAc,IAAD,8BACT,gBAcJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAd1C,EAAKC,MAAM,CACPxB,OAAO,GACPqB,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACfI,MAAM,8CAA8CxC,MAAK,SAAAyC,GACrD,OAAOA,EAASC,UAEnB1C,MAAK,SAAA2C,GACF,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAM9B,WAAS,IAAD,OACEC,EAAeC,KAAKN,MAAMxB,OAAO+B,QAAO,SAAAC,GAC1C,OAAOA,EAAMnC,KAAKoC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAEpE,OAA8B,IAA3BH,KAAKN,MAAMxB,OAAOmC,OACV,4CAIX,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWc,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAhCZO,aCIlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UAOE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.01247e36.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card=(props)=>{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"robot\" src={`https://robohash.org/${props.id}?200x200`}/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist=({robots})=>{\r\n    const cardArray=robots.map((user,i)=>{\r\n        return <Card \r\n        key={robots[i].id} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email} \r\n        username={robots[i].username}\r\n        />\r\n    })\r\n    return(\r\n        <div>\r\n         {cardArray}\r\n        </div>\r\n    );\r\n}\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox=({searchChange})=>{\r\n    return(\r\n        <div >\r\n        <input className='pa3 ba b--green bg-lightest-blue' type=\"search\" placeholder=\"search robots\" onChange={searchChange}/>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflow:'scroll',border:'5px solid black',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport Cardlist from '../Components/Cardlist';\r\n// import { robots } from './robots';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css'\r\nimport Scroll from '../Components/Scroll';\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n            return response.json();\r\n        })\r\n        .then(users=>{\r\n            this.setState({robots:users})\r\n        });\r\n    }\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield : event.target.value});  \r\n    }\r\n    render(){\r\n        const filteredRobots=this.state.robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if(this.state.robots.length===0){\r\n           return  <h1>Loading...</h1>\r\n        } \r\n        else{\r\n    return(\r\n        <div className='tc'>\r\n            <h1 className='f1'>RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n            <Cardlist robots={filteredRobots}/>\r\n            </Scroll>\r\n        </div>\r\n    );\r\n}\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n// import Cardlist from './Cardlist'\n// import {robots} from './robots.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <div>\n      <Card id={robots[0].id} name={robots[0].name} email={robots[0].email} username={robots[0].username}/>\n      <Card id={robots[1].id} name={robots[1].name} email={robots[1].email} username={robots[1].username}/>\n      <Card id={robots[2].id} name={robots[2].name} email={robots[2].email} username={robots[2].username}/>\n    </div> */}\n    {/* <Cardlist robots={robots}/> */}\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}